version: '3'
services:
  # ZooKeeper Ensemble
  zookeeper1:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
    volumes:
      - ./data/zookeeper1/data:/var/lib/zookeeper/data
      - ./data/zookeeper1/log:/var/lib/zookeeper/log
    healthcheck:
      test: echo srvr | nc zookeeper1 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure:3

  zookeeper2:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper2
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
    volumes:
      - ./data/zookeeper2/data:/var/lib/zookeeper/data
      - ./data/zookeeper2/log:/var/lib/zookeeper/log
    healthcheck:
      test: echo srvr | nc zookeeper2 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure:3

  zookeeper3:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper3
    ports:
      - "2183:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
    volumes:
      - ./data/zookeeper3/data:/var/lib/zookeeper/data
      - ./data/zookeeper3/log:/var/lib/zookeeper/log
    healthcheck:
      test: echo srvr | nc zookeeper3 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: on-failure:3

  # Kafka Cluster
  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka1
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy
      zookeeper3:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_MESSAGE_MAX_BYTES: "62914560"
      KAFKA_REPLICA_FETCH_MAX_BYTES: "62914560"
      KAFKA_SOCKET_REQUEST_MAX_BYTES: "629145600"
      KAFKA_LOG_RETENTION_HOURS: 72
      KAFKA_LOG_SEGMENT_BYTES: "1073741824"
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 30000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 30000
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
    volumes:
      - ./data/kafka1:/var/lib/kafka/data
    healthcheck:
      test: kafka-topics --bootstrap-server kafka1:9092 --list || exit 1
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 90s
    restart: on-failure:3
    deploy:
      resources:
        limits:
          memory: 2G

  kafka2:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka2
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy
      zookeeper3:
        condition: service_healthy
      kafka1:
        condition: service_healthy
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_MESSAGE_MAX_BYTES: "62914560"
      KAFKA_REPLICA_FETCH_MAX_BYTES: "62914560"
      KAFKA_SOCKET_REQUEST_MAX_BYTES: "629145600"
      KAFKA_LOG_RETENTION_HOURS: 72
      KAFKA_LOG_SEGMENT_BYTES: "1073741824"
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 30000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 30000
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
    volumes:
      - ./data/kafka2:/var/lib/kafka/data
    healthcheck:
      test: kafka-topics --bootstrap-server kafka2:9093 --list || exit 1
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 120s
    restart: on-failure:3
    deploy:
      resources:
        limits:
          memory: 2G

  kafka3:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka3
    depends_on:
      zookeeper1:
        condition: service_healthy
      zookeeper2:
        condition: service_healthy
      zookeeper3:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,PLAINTEXT_HOST://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094,PLAINTEXT_HOST://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_MESSAGE_MAX_BYTES: "62914560"
      KAFKA_REPLICA_FETCH_MAX_BYTES: "62914560"
      KAFKA_SOCKET_REQUEST_MAX_BYTES: "629145600"
      KAFKA_LOG_RETENTION_HOURS: 72
      KAFKA_LOG_SEGMENT_BYTES: "1073741824"
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 1
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 30000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 30000
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
    volumes:
      - ./data/kafka3:/var/lib/kafka/data
    healthcheck:
      test: kafka-topics --bootstrap-server kafka3:9094 --list || exit 1
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 150s
    restart: on-failure:3
    deploy:
      resources:
        limits:
          memory: 2G

  # Kafka Connect with ClickHouse Sink Connector
  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.3.0
    container_name: kafka-connect
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9093,kafka3:9094
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "kafka-connect"
      CONNECT_CONFIG_STORAGE_TOPIC: connect_configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect_offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect_status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "2"
      CONNECT_PRODUCER_MAX_REQUEST_SIZE: "62914560"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components,/connectors"
      CONNECT_PRODUCER_RETRIES: 5
      CONNECT_PRODUCER_RETRY_BACKOFF_MS: 1000
      # JVM 内存优化配置
      KAFKA_HEAP_OPTS: "-Xmx4g -Xms2g"
      KAFKA_JVM_PERFORMANCE_OPTS: "-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"
      KAFKA_GC_LOG_OPTS: "-Xlog:gc*:gc.log:time,tags"
    volumes:
      - ./clickhouse-kafka-sink-connector:/connectors/clickhouse-sink-connector
    healthcheck:
      test: curl -f http://kafka-connect:8083/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: on-failure:3
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 2G

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
      kafka-connect:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: production
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9093,kafka3:9094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: kafka-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
    restart: on-failure:3 
      